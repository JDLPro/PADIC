function FindInv(base, inverse, i);

let base; let inverse; \\ declare and clear variable
let boo = false; \\ boolean for first number
do{

  for(try = 0;try > 5*base;try++){
    if((inverese*try)%base==1){
      padic[0] = try;
      boo = true;
      break;
      } \\ find first padic inverse number
    \* else{
      alert("I could not find an inverse");
      break;
      } *\
    }
  for(i = 0; i = base; i++){
  
  } \\ find other values. Should be a function because it will be called over and over.
  if(boo==false){
    cout << "could not find inverse";
    } \\ if no inverse could be found
  
}


}while(menu!=q);

\\ Prototype functions

function FindInv(base, inverse, i){
  if((inverse*try)==0){
    
    }
}
